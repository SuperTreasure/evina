name: Download dependencies
on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 */1 * *"

env:
  TZ: Asia/Shanghai

jobs:
  create_option:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.set-date.outputs.date }}
    steps:
      - id: set-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: cache option
        id: cache-option
        uses: actions/cache@v4
        with:
          path: |
            option
          key: ${{ runner.os }}-option-${{ steps.set-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-option-

      - name: download evina
        if: steps.cache-option.outputs.cache-hit != 'true'
        run: |
          mkdir -p option
          wget $(curl https://api.github.com/repos/SuperTreasure/evina/releases/latest | jq -r .assets[3].browser_download_url)
          tar -xvf evina*.tar.xz -C option
          wget https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n6.1-latest-linux64-gpl-6.1.tar.xz
          # wget $(curl https://api.github.com/repos/BtbN/FFmpeg-Builds/releases/latest | jq -r .assets[36].browser_download_url)
          tar -xvf ffmpeg*.tar.xz -C option
          wget $(curl https://api.github.com/repos/tickstep/aliyunpan/releases/latest | jq -r .assets[10].browser_download_url)
          unzip -o aliyunpan*.zip -d option
          cd ./option/aliyunpan*amd64
          curl ${{ secrets.ALI_TOKEN_URL }} > aliyunpan_config.json && ./aliyunpan pwd
          # ./option/aliyunpan*amd64/aliyunpan login -RefreshToken=${{ secrets.ALI_TOKEN }}
