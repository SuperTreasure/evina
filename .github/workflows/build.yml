name: build evina cmd
on: 
  push: 
    tags:
      - 'v*'


jobs:

  create_release:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changelog_reader.outputs.changes }}
      version: ${{ steps.changelog_reader.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version number
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Changelog Reader
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.2.2
        with:
          path: './.github/CHANGELOG.md'
          version: ${{ steps.get_version.outputs.version }}

      - name: cache cargo dependencies
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install rust
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with: 
          toolchain: stable
          target: ${{ inputs.target }}
          profile: minimal
          default: true
          override: true

      - name: Install dependencies
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: cargo install cross
        shell: bash

  evina_cmd: 
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        target:          
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - s390x-unknown-linux-gnu

    runs-on: ubuntu-latest
    steps: 
      - name: checkout actions
        uses: actions/checkout@v4

      - name: cache cargo dependencies
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: cache target dependencies
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-target-

      - name: build ${{ matrix.target }}
        id: run_build
        uses: ./.github/build
        with: 
          bin: evina
          target: ${{ matrix.target }}
          function: build

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: build/${{ steps.run_build.outputs.file }}
          retention-days: 1

  build_body: 
    needs: [create_release,evina_cmd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: release
          path: artifac

      - name: build changes
        uses: ./.github/build
        with: 
          function: changelog
          changes: ${{ needs.create_release.outputs.changes}}

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ needs.create_release.outputs.version}}
          body_path: changes.md
          files: artifac/*
          draft: false
          prerelease: false

